#!/bin/sh

source /usr/local/bin/utility-library

set -ex

# Generate scratch file to hold AWS JSON response for parsing.
tempfile=$(mktemp)

# Constants.
image_id='ami-9429fff4' # us-west-2, ebs-backed, x86_64
key_name='james@jamesan.ca'\
security_group='default'
instance_type='t2.micro'
subnet_id='subnet-89894bff'

tag_prefix='jamesan'

# Derived constants
# e.g. 'us-w2c'
tag_suffix="$(echo us-west-2c | cut -f1,3 -d- | sed "s/-/-$(echo us-west-2c | cut -f2 -d- | cut -c1)/")"
# e.g. 'jamesan-create-us-w2c-'
token_prefix="$tag_prefix-create-$tag_suffix"

token_counter=01
vpc_cidr='192.168.255.240/28'
environment='dev'

# Source IP addresses for firewall whitelist.
ip_addrs=(
  [james]=174.88.99.177
)

# Resource name tag nomenclature.
declare -A tags=(
  [vpc]='vpc'
  [subnet]='sn'
  [security-group]='sg'
  [instance]='inst-'$token_counter
)

declare -a resource_types=(
  image
  key
  dhcp-options
  vpc
  subnet
  security-group
  instance
)

declare -A ids=(
  [image]=ami-572c883c
  [dhcp-options]=sg-a3c2d9c7
  [vpc]=vpc-bad4d3df
  [subnet]=subnet-e7f19abe
  [security-group]=sg-a3c2d9c7
)
declare -A names=(
  [image]='arch-linux-hvm-2016.03.21.x86_64-ebs'
  [key]="${tag_prefix}-key-jan-${tag_suffix}"
  [instance]="${tag_prefix}-instance-$token_counter-${tag_suffix}"
)
declare -A id_names=(
  [image]=ImageId
  [dhcp-options]=DhcpOptionsId
  [vpc]=VpcId
  [subnet]=SubnetId
  [security-group]=GroupId
  [instance]=InstanceId
)

function main() {
  aws ec2 run-instances \
    --image-id $image_id \
    --key-name $key_name \
    --security-groups default \
    --instance-type $instance_type \
    --count 1 \
    |& tee /tmp/a
    #~ --user-data HOSTNAME=aws.jamesan.ca \
    #~ --subnet-id $subnet_id \
    #~ --enable-api-termination \
    #~ --instance-initiated-shutdown-behavior terminate \
    #~ --ebs-optimized \
    #~ --associate-public-ip-address \
}

# invoke main function if this script is executed as a command
if [ "$CMD" = ${BASH_SOURCE##*/} ]; then
  main "$@"
else
  unset main
fi

#~ # Fetch values from AWS JSON response.
#~ function get_value() {
  #~ [ $# -eq 2 -o $# -eq 1 ] || return 1;
  #~ [ $# -eq 1 ] && file="$tempfile" || file="$2"
  #~ param="$1"
  #~ sed -n -r 's/^\s+"'"$param"'": "([^"]*)",?$/\1/p' "$file"
#~ }
