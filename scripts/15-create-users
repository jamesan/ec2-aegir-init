#!/bin/sh
#
#   15-create-users
#   Create shell users and fetch their SSH public keys from GitHub. Part of
#   the prov-ec2 script series.
#
#   Copyright (c) 2015 James An <james@jamesan.ca>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not

source /usr/local/bin/utility-library
tempfile=$(mktemp)

declare -a users=(
  'James An:jamesan'
  'Thomas Dury:ethnovode'
  'Edouard Gabaudan:baroneddy'
)

main() {
  _msg "Adding aegir-related setup to user:"
  [ -L /etc/skel/platforms ] || ln --symbolic ~aegir/platforms /etc/skel
  [ -L /etc/skel/hostmaster ] || ln --symbolic /usr/share/webapps/hostmaster /etc/skel
  [ -z "$(grep platforms /etc/skel/.bash_profile)" ] && echo -e "\ncd ~/platforms" >> /etc/skel/.bash_profile

  _msg "Creating ${#users[@]} users:"
  for user in "${users[@]}"; do
    user_name="$(cut --fields=1 --delimiter=: <<<$user)"
    user_github="$(cut --fields=2 --delimiter=: <<<$user)"

    # Derive user's account name in lowercase as first initial plus name's last word (i.e. usually the last name).
    name=${user_name,,}
    name=${name:0:1}${name##* }

    # Derive user's home directory as username subdirectory of the default home base directory (i.e. usually /home).
    user_home="$(grep HOME /etc/default/useradd | cut --fields=2- --delimiter==)/$name"

    # Skip users that already exist.
    if getent passwd $name &>/dev/null; then
      _msg2 "$user already exists. Skipping..."
      continue
    fi

    _msg2 "Creating $user..."
    useradd --comment "$user_name" --home-dir "$user_home" --gid users --groups users,http --create-home --no-user-group $name
    passwd --delete $name

    _msg2 "Enabling login using the $user's SSH keys as found on Github.com..."
    curl https://api.github.com/users/$user_github/keys | jq '.[].key' | tr --delete '"' >| $user_home/.ssh/authorized_keys
    cat $user_home/.ssh/authorized_keys >> $tempfile
  done

  # Authorise all SSH keys fetched from Github for all users to log in as the aegir system user.
  [ -d ~aegir/.ssh ] || install --directory --group=http --owner=aegir --mode=700 ~aegir/.ssh
  install --group=http --owner=aegir --mode=600 $tempfile ~aegir/.ssh

  _msg 'Enabling password-less sudo access for all users in the "users" user group and restarting SSH daemon...'
  echo '%users ALL=(ALL) NOPASSWD: ALL' >| $tempfile
  install --mode=400 $tempfile /etc/sudoers.d/users
  systemctl restart sshd.service

  _msg 'Set up complete!'
}

# invoke main function if this script is executed as a command
if [ "$CMD" = ${BASH_SOURCE##*/} ]; then
  main "$@"
else
  unset main
fi
