#!/bin/sh
#
#   prov-ec2-03-install-lemp-aegir
#   Install LEMP packages and Aegir. Part of the prov-ec2 script series.
#
#   Copyright (c) 2015 James An <james@jamesan.ca>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

source /usr/local/bin/utility-library
tempfile=$(mktemp)

main() {
  _msg 'Setting up Aegir/LEMP stack...'

  _msg2 'Installing LEMP stack packages...'
  pacman --noconfirm --sync --needed mariadb nginx php-fpm

  _msg2 'Installing TU repo and AUR helpers...'
  [ -z "$(grep quarry /etc/pacman.conf)" ] && {
    sed --in-place '/\[core\]/i\[quarry]\nServer = http://pkgbuild.com/~anatolik/quarry/x86_64\n' /etc/pacman.conf
  }
  pacman --sync --refresh
  for PACKAGE in package-query yaourt; do
    curl --location https://aur4.archlinux.org/cgit/aur.git/snapshot/$PACKAGE.tar.gz | sudo -u user tar --extract --file - --gzip --directory=/tmp
    pushd /tmp/$PACKAGE
    sudo -u user makepkg --install --syncdeps --noconfirm --needed
    popd
  done

  _msg2 'Installing aegir and mailcatcher...'
  sudo -u user yaourt --aur-url https://aur4.archlinux.org --noconfirm --sync --needed ruby-mailcatcher drush-git
  sudo -u user yaourt --aur-url https://aur4.archlinux.org --noconfirm --sync --needed aegir

  _msg 'Generate per-user MySQL credentials and disable all shell password authentication...'
  [ "$(systemctl is-active mysqld.service)" = 'active' ] && systemctl stop mysqld.service
  [ -d /var/lib/mysql ] && rm --force --recursive /var/lib/mysql
  mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql && systemctl start mysqld.service
  SQL_CMDS=()
  MY_CNF="[client]\nuser=%USER%\npassword=%PASS%"
  for USERNAME in aegir root; do
      PASSWORD="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"
      FILE="${MY_CNF/\%USER\%/$USERNAME}"
      FILE="${FILE/\%PASS\%/$PASSWORD}"
      HOME="$(eval echo ~$USERNAME)"
      CONF_PATH="$HOME/.my.cnf"
      install --directory --owner=$USERNAME $HOME
      echo -e "$FILE" | sudo -u $USERNAME tee $CONF_PATH &>/dev/null
      SQL_CMDS+=("GRANT ALL PRIVILEGES ON *.* TO '$USERNAME'@'%' IDENTIFIED BY '$PASSWORD' WITH GRANT OPTION;")
  done
  test -v SQL_CMDS && unset SQL_CMDS[${#SQL_CMDS[@]}-1]
  SQL_CMDS+=(
      "UPDATE mysql.user SET PASSWORD=PASSWORD('$(tail -n1 ~root/.my.cnf | sed 's/^password=//')') WHERE User='root';"
      "DELETE FROM mysql.user WHERE User='';"
      "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
      "DROP DATABASE IF EXISTS test;"
      "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
      "FLUSH PRIVILEGES;"
  )
  mv "$(eval echo ~$USERNAME)"/.my.cnf "$(eval echo ~$USERNAME)"/.my.cnf~
  mysql --user=root --execute="${SQL_CMDS[*]}"
  mv "$(eval echo ~$USERNAME)"/.my.cnf~ "$(eval echo ~$USERNAME)"/.my.cnf

  _msg 'Setting up LEMP stack as dedicated Drupal host and Aegir controller'

  _msg2 'Applying ACL onto Aegir files and folders...'
  paths=(
    /etc/drush
    /usr/share/webapps/aegir
    /usr/share/webapps/hostmaster
  )
  sudo setfacl --recursive --modify=g:http:rw- "${paths[@]}"
  sudo find "${paths[@]}" -type d -exec sudo setfacl --modify=g:http:rwx {} +

  _msg2 'Setting up msmtp and mailcatcher as an SMTP server emulator...'
  systemctl enable --now mailcatcher.service mailcatcher-smtp.socket
  cp --force /etc/msmtprc.aegir /etc/msmtprc

  _msg2 'Setting up the Aegir frontend, Hostmaster...'
  sudo -Hu aegir drush hostmaster-install --web_group=http --http_service_type=nginx \
        --root=/usr/share/webapps/hostmaster \
        --aegir_db_user=$(sudo -u aegir sed --quiet --regexp-extended 's/^user=(.+)$/\1/p' ~aegir/.my.cnf) \
        --aegir_db_pass="$(sudo -u aegir sed --quiet --regexp-extended 's/^password=(.+)$/\1/p' ~aegir/.my.cnf)" \
        --client_email=aegir@$(hostname) \
        --aegir_host=$(hostname) aegir.$(hostname) \
        --yes
  sudo systemctl enable --now aegir.target

  _msg 'Set up complete!'
}

# invoke main function if this script is executed as a command
if [ "$CMD" = ${BASH_SOURCE##*/} ]; then
  main "$@"
else
  unset main
fi
