#!/bin/sh
#
#   prov-ec2-06-apply-drg-config
#   Apply configuration settings specific to DRG's Insight Platform project.
#   Part of the prov-ec2 script series.
#
#   Copyright (c) 2015 James An <james@jamesan.ca>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

source /usr/local/bin/utility-library
tempfile=$(mktemp)

# Declare GitHub-related constants.
github_user=jamesan
github_token=14d01e098f86d03f0be049f66196925977aaff9a
github_repo_api_url=https://api.github.com/repos/dresources/insight-platform
key_title='R/O password-less key for :ENV: Aegir System User'

# Set DRG-specific Aegir hostmaster variables
declare -A variables=(
  ['hosting_default_profile']='insight_install'
)

#
# set_variables
# Sets Drupal variables from key-value pairs stored in a shell associative array.
#
# $1 = site alias (without the leading at symbol, @)
# $2 = the variable name of the key-value-pair array
#
set_variables() {
  local url=$1
  local -n array=$2
  [ -n "$3" ] && format=json || format=auto

  # Apply variables for type-grouped arrays
  for key in "${!array[@]}"; do
    value="${array[$key]}"
    [ $(echo "$value" | wc -l) -eq 1 ] && format=auto || format=json
    sudo -Hu aegir drush @$url vset --exact --yes --format=$format "$key" "$value"
  done
}

# Derive environment string from server hostname, otherwise default to DEV.
environment=$(hostname | egrep -o '(dev|qa|stg|adm)' | head -n1 | tr '[:lower:]' '[:upper:]')
environment=${environment:-DEV}

main() {
  _msg "Installing phpseclib and enabling OpenSSL PHP extension..."
  sudo -u user yaourt --aur-url https://aur4.archlinux.org --noconfirm --sync --needed pear-phpseclib
  echo 'extension=openssl.so' >| $tempfile
  install -m644 $tempfile /etc/php/conf.d/openssl.ini

  _msg "Defining DRG's Hostmaster site-wide variables..."
  set_variables hostmaster variables

  _msg "Generating SSH key for Aegir and pre-authorising GitHub.com's SSH host key..."
  [ -f ~aegir/.ssh/id_rsa ] || sudo -Hu aegir ssh-keygen -t rsa -N "" -f ~aegir/.ssh/id_rsa

  #~ _msg "Preparing Aegir's GitHub.com access..."
  #~ # Fetch repo's deploy keys and filter based on the presence of the
  #~ # environment string in the key title.
  #~ _msg2 "Deleting old key(s) for the current environment, $environment..."
  #~ keys=($(curl --user $github_user:$github_token $github_repo_api_url/keys | \
    #~ jq 'map(
      #~ if (.title | test ("'$environment'")) then
        #~ .id
      #~ else
        #~ empty
      #~ end
    #~ )' | head -n-1 | tail -n+2 | tr -d ' ,'))
  #~ for key in keys; do
    #~ curl --user $github_user:$github_token --request DELETE $github_repo_url/keys/$key
  #~ done

  #~ # Prepare JSON payload for the new SSH public key
  #~ _msg2 "Adding new R/O deploy key..."
  #~ key_data="{
  #~ \"title\": \"${key_title/:ENV:/$environment}\",
  #~ \"key\": \"$(cat ~aegir/.ssh/id_rsa.pub)\",
  #~ \"read_only\": true
#~ }"
  #~ curl --user $github_user:$github_token --request POST \
    #~ --data "$key_data" $github_repo_url/keys


  _msg2 "Pre-authorising GitHub.com's SSH host keys..."
  [ -z "$(grep github.com ~aegir/.ssh/known_hosts)" ] && \
    ssh-keyscan github.com | \
    sudo -Hu aegir tee -a ~aegir/.ssh/known_hosts &>/dev/null

  _msg 'Set up complete!'
}

# invoke main function if this script is executed as a command
if [ "$CMD" = ${BASH_SOURCE##*/} ]; then
  main "$@"
else
  unset main
fi
